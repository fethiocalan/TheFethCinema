<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>